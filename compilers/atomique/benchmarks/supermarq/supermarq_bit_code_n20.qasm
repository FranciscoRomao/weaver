// Generated from Cirq v1.0.0

OPENQASM 2.0;
include "qelib1.inc";


// Qubits: [q(0), q(1), q(2), q(3), q(4), q(5), q(6), q(7), q(8), q(9), q(10), q(11), q(12), q(13), q(14), q(15), q(16), q(17), q(18), q(19), q(20), q(21), q(22), q(23), q(24), q(25), q(26), q(27), q(28), q(29), q(30), q(31), q(32), q(33), q(34), q(35), q(36), q(37), q(38)]
qreg q[39];
// creg m_mcm0[19];
// creg m_mcm1[19];
// creg m_mcm2[19];
creg m_meas_all[39];


cx q[0],q[1];
cx q[2],q[1];
cx q[2],q[3];
cx q[4],q[3];
cx q[4],q[5];
cx q[6],q[5];
cx q[6],q[7];
cx q[8],q[7];
cx q[8],q[9];
cx q[10],q[9];
cx q[10],q[11];
cx q[12],q[11];
cx q[12],q[13];
cx q[14],q[13];
cx q[14],q[15];
cx q[16],q[15];
cx q[16],q[17];
cx q[18],q[17];
cx q[18],q[19];
cx q[20],q[19];
cx q[20],q[21];
cx q[22],q[21];
cx q[22],q[23];
cx q[24],q[23];
cx q[24],q[25];
cx q[26],q[25];
cx q[26],q[27];
cx q[28],q[27];
cx q[28],q[29];
cx q[30],q[29];
cx q[30],q[31];
cx q[32],q[31];
cx q[32],q[33];
cx q[34],q[33];
cx q[34],q[35];
cx q[36],q[35];
cx q[36],q[37];
cx q[38],q[37];

// Gate: cirq.MeasurementGate(19, cirq.MeasurementKey(name='mcm0'), ())
// measure q[1] -> m_mcm0[0];
// measure q[3] -> m_mcm0[1];
// measure q[5] -> m_mcm0[2];
// measure q[7] -> m_mcm0[3];
// measure q[9] -> m_mcm0[4];
// measure q[11] -> m_mcm0[5];
// measure q[13] -> m_mcm0[6];
// measure q[15] -> m_mcm0[7];
// measure q[17] -> m_mcm0[8];
// measure q[19] -> m_mcm0[9];
// measure q[21] -> m_mcm0[10];
// measure q[23] -> m_mcm0[11];
// measure q[25] -> m_mcm0[12];
// measure q[27] -> m_mcm0[13];
// measure q[29] -> m_mcm0[14];
// measure q[31] -> m_mcm0[15];
// measure q[33] -> m_mcm0[16];
// measure q[35] -> m_mcm0[17];
// measure q[37] -> m_mcm0[18];

h q[1];
h q[3];
h q[5];
h q[7];
h q[9];
h q[11];
h q[13];
h q[15];
h q[17];
h q[19];
h q[21];
h q[23];
h q[25];
h q[27];
h q[29];
h q[31];
h q[33];
h q[35];
h q[37];
cx q[0],q[1];
cx q[2],q[1];
cx q[2],q[3];
cx q[4],q[3];
cx q[4],q[5];
cx q[6],q[5];
cx q[6],q[7];
cx q[8],q[7];
cx q[8],q[9];
cx q[10],q[9];
cx q[10],q[11];
cx q[12],q[11];
cx q[12],q[13];
cx q[14],q[13];
cx q[14],q[15];
cx q[16],q[15];
cx q[16],q[17];
cx q[18],q[17];
cx q[18],q[19];
cx q[20],q[19];
cx q[20],q[21];
cx q[22],q[21];
cx q[22],q[23];
cx q[24],q[23];
cx q[24],q[25];
cx q[26],q[25];
cx q[26],q[27];
cx q[28],q[27];
cx q[28],q[29];
cx q[30],q[29];
cx q[30],q[31];
cx q[32],q[31];
cx q[32],q[33];
cx q[34],q[33];
cx q[34],q[35];
cx q[36],q[35];
cx q[36],q[37];
cx q[38],q[37];

// Gate: cirq.MeasurementGate(19, cirq.MeasurementKey(name='mcm1'), ())
// measure q[1] -> m_mcm1[0];
// measure q[3] -> m_mcm1[1];
// measure q[5] -> m_mcm1[2];
// measure q[7] -> m_mcm1[3];
// measure q[9] -> m_mcm1[4];
// measure q[11] -> m_mcm1[5];
// measure q[13] -> m_mcm1[6];
// measure q[15] -> m_mcm1[7];
// measure q[17] -> m_mcm1[8];
// measure q[19] -> m_mcm1[9];
// measure q[21] -> m_mcm1[10];
// measure q[23] -> m_mcm1[11];
// measure q[25] -> m_mcm1[12];
// measure q[27] -> m_mcm1[13];
// measure q[29] -> m_mcm1[14];
// measure q[31] -> m_mcm1[15];
// measure q[33] -> m_mcm1[16];
// measure q[35] -> m_mcm1[17];
// measure q[37] -> m_mcm1[18];

h q[1];
h q[3];
h q[5];
h q[7];
h q[9];
h q[11];
h q[13];
h q[15];
h q[17];
h q[19];
h q[21];
h q[23];
h q[25];
h q[27];
h q[29];
h q[31];
h q[33];
h q[35];
h q[37];
cx q[0],q[1];
cx q[2],q[1];
cx q[2],q[3];
cx q[4],q[3];
cx q[4],q[5];
cx q[6],q[5];
cx q[6],q[7];
cx q[8],q[7];
cx q[8],q[9];
cx q[10],q[9];
cx q[10],q[11];
cx q[12],q[11];
cx q[12],q[13];
cx q[14],q[13];
cx q[14],q[15];
cx q[16],q[15];
cx q[16],q[17];
cx q[18],q[17];
cx q[18],q[19];
cx q[20],q[19];
cx q[20],q[21];
cx q[22],q[21];
cx q[22],q[23];
cx q[24],q[23];
cx q[24],q[25];
cx q[26],q[25];
cx q[26],q[27];
cx q[28],q[27];
cx q[28],q[29];
cx q[30],q[29];
cx q[30],q[31];
cx q[32],q[31];
cx q[32],q[33];
cx q[34],q[33];
cx q[34],q[35];
cx q[36],q[35];
cx q[36],q[37];
cx q[38],q[37];

// Gate: cirq.MeasurementGate(19, cirq.MeasurementKey(name='mcm2'), ())
// measure q[1] -> m_mcm2[0];
// measure q[3] -> m_mcm2[1];
// measure q[5] -> m_mcm2[2];
// measure q[7] -> m_mcm2[3];
// measure q[9] -> m_mcm2[4];
// measure q[11] -> m_mcm2[5];
// measure q[13] -> m_mcm2[6];
// measure q[15] -> m_mcm2[7];
// measure q[17] -> m_mcm2[8];
// measure q[19] -> m_mcm2[9];
// measure q[21] -> m_mcm2[10];
// measure q[23] -> m_mcm2[11];
// measure q[25] -> m_mcm2[12];
// measure q[27] -> m_mcm2[13];
// measure q[29] -> m_mcm2[14];
// measure q[31] -> m_mcm2[15];
// measure q[33] -> m_mcm2[16];
// measure q[35] -> m_mcm2[17];
// measure q[37] -> m_mcm2[18];

h q[1];
h q[3];
h q[5];
h q[7];
h q[9];
h q[11];
h q[13];
h q[15];
h q[17];
h q[19];
h q[21];
h q[23];
h q[25];
h q[27];
h q[29];
h q[31];
h q[33];
h q[35];
h q[37];

// Gate: cirq.MeasurementGate(39, cirq.MeasurementKey(name='meas_all'), ())
measure q[0] -> m_meas_all[0];
measure q[1] -> m_meas_all[1];
measure q[2] -> m_meas_all[2];
measure q[3] -> m_meas_all[3];
measure q[4] -> m_meas_all[4];
measure q[5] -> m_meas_all[5];
measure q[6] -> m_meas_all[6];
measure q[7] -> m_meas_all[7];
measure q[8] -> m_meas_all[8];
measure q[9] -> m_meas_all[9];
measure q[10] -> m_meas_all[10];
measure q[11] -> m_meas_all[11];
measure q[12] -> m_meas_all[12];
measure q[13] -> m_meas_all[13];
measure q[14] -> m_meas_all[14];
measure q[15] -> m_meas_all[15];
measure q[16] -> m_meas_all[16];
measure q[17] -> m_meas_all[17];
measure q[18] -> m_meas_all[18];
measure q[19] -> m_meas_all[19];
measure q[20] -> m_meas_all[20];
measure q[21] -> m_meas_all[21];
measure q[22] -> m_meas_all[22];
measure q[23] -> m_meas_all[23];
measure q[24] -> m_meas_all[24];
measure q[25] -> m_meas_all[25];
measure q[26] -> m_meas_all[26];
measure q[27] -> m_meas_all[27];
measure q[28] -> m_meas_all[28];
measure q[29] -> m_meas_all[29];
measure q[30] -> m_meas_all[30];
measure q[31] -> m_meas_all[31];
measure q[32] -> m_meas_all[32];
measure q[33] -> m_meas_all[33];
measure q[34] -> m_meas_all[34];
measure q[35] -> m_meas_all[35];
measure q[36] -> m_meas_all[36];
measure q[37] -> m_meas_all[37];
measure q[38] -> m_meas_all[38];
